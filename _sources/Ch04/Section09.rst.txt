Section 09: Smart Generators
::::::::::::::::::::::::::::::::::::::::::::

.. youtube:: 6PdhWjaitvc
        :height: 315
        :width: 560
        :align: center

Instead of the generator generating all the successive states and then a tester nding out that this state, this state and this state are iden- tical to the initial state. One could make the generator itself smarter and say that a generator will not even generate these three states, but it will know that it should not generate states that are already up here. This means that we can ei- ther provide the generator with some additional abilities or the tester with some additional abil- ities or both. If the generator was smarter, then it would not even generate these three states be- cause they are nonproductive. I would exclude maybe the tester, the determinant of this state is illegal and therefore dismisses it. We could even go one step further and make the generator even smarter, so the generator will not generate this particular state. And thus, the balance within the generator and the tester can shift depending on where we try to put knowledge. For this problem, for this relatively simple and small problem, the balance will responsibility between the generator and test might look like a tree relationship. But imagine a problem in if there are a million such states. Then whether we have generated very smart or the tests are very smart or both can become a important issue. Despite that, genetic testing factors are a very popular method used in some schools of AI. Genetic algorithms, for instance, can be viewed as genetic generate and test. Given a number of states, they try to find out all the potential successive states that are possible, given some simple rules of recombination. And then of a fitness function that acts as a tester. Genetic algorithms, therefore, are an effective method for a very large number of problems. They're also a very inefficient method because neither the generator nor the testing generator algorithms are especially smart.        